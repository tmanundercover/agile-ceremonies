<?xml version="1.0" encoding="UTF-8"?>
<svg width="1200" height="800" xmlns="http://www.w3.org/2000/svg">
    <defs>
        <linearGradient id="configGrad" x1="0%" y1="0%" x2="100%" y2="0%">
            <stop offset="0%" style="stop-color:#9C27B0;stop-opacity:1" />
            <stop offset="100%" style="stop-color:#BA68C8;stop-opacity:1" />
        </linearGradient>
    </defs>

    <!-- Header -->
    <rect x="50" y="20" width="1100" height="60" fill="url(#configGrad)" rx="10"/>
    <text x="600" y="55" text-anchor="middle" fill="white" font-size="24">Nat's Basic Configuration Setup</text>

    <!-- Environment Setup -->
    <g transform="translate(70, 100)">
        <rect x="0" y="0" width="500" height="250" fill="#F3E5F5" rx="5" stroke="#9C27B0"/>
        <text x="20" y="30" font-weight="bold" fill="#9C27B0">1. Environment Setup</text>
        
        <text x="20" y="60" font-size="14">Environment Variables:</text>
        <text x="40" y="80" font-size="11" font-family="monospace">OPENAI_API_KEY=your_key_here</text>
        <text x="40" y="100" font-size="11" font-family="monospace">NAT_AGENT_ID=ceo_agent_001</text>
        <text x="40" y="120" font-size="11" font-family="monospace">AUTH_LEVEL=admin</text>
        <text x="40" y="140" font-size="11" font-family="monospace">BASE_PROMPT_PATH=/prompts/nat/</text>

        <text x="20" y="170" font-size="14">Required Packages:</text>
        <text x="40" y="190" font-size="11" font-family="monospace">openai, dotenv, express, mongoose</text>
        <text x="40" y="210" font-size="11" font-family="monospace">typescript, @types/node</text>
    </g>

    <!-- Base Personality -->
    <g transform="translate(600, 100)">
        <rect x="0" y="0" width="500" height="250" fill="#F3E5F5" rx="5" stroke="#9C27B0"/>
        <text x="20" y="30" font-weight="bold" fill="#9C27B0">2. Personality Configuration</text>
        
        <text x="20" y="60" font-size="14">Base Traits:</text>
        <text x="40" y="80" font-size="12">• Leadership-oriented</text>
        <text x="40" y="100" font-size="12">• Strategic thinking</text>
        <text x="40" y="120" font-size="12">• Clear communication</text>
        <text x="40" y="140" font-size="12">• Decision-making authority</text>

        <text x="20" y="170" font-size="14">Response Style:</text>
        <text x="40" y="190" font-size="12">• Concise and direct</text>
        <text x="40" y="210" font-size="12">• Professional tone</text>
        <text x="40" y="230" font-size="12">• Solution-focused</text>
    </g>

    <!-- Core Functions -->
    <g transform="translate(70, 380)">
        <rect x="0" y="0" width="1030" height="300" fill="#F3E5F5" rx="5" stroke="#9C27B0"/>
        <text x="20" y="30" font-weight="bold" fill="#9C27B0">3. Implementation Steps</text>

        <!-- Left Column -->
        <g transform="translate(20, 50)">
            <!-- Step 1 -->
            <text x="0" y="20" font-size="16">Step 1: Basic Agent Class Structure</text>
            <g transform="translate(20, 40)">
                <text x="0" y="0" font-size="11" font-family="monospace">class NatAgent {</text>
                <text x="0" y="15" font-size="11" font-family="monospace">    private apiKey: string;</text>
                <text x="0" y="30" font-size="11" font-family="monospace">    private agentId: string;</text>
                <text x="0" y="45" font-size="11" font-family="monospace">    private basePrompt: string;</text>
                <text x="0" y="60" font-size="11" font-family="monospace">    </text>
                <text x="0" y="75" font-size="11" font-family="monospace">    constructor() {</text>
                <text x="0" y="90" font-size="11" font-family="monospace">        this.loadEnvironment();</text>
                <text x="0" y="105" font-size="11" font-family="monospace">        this.initializeAgent();</text>
                <text x="0" y="120" font-size="11" font-family="monospace">    }</text>
                <text x="0" y="135" font-size="11" font-family="monospace">}</text>
            </g>
        </g>

        <!-- Right Column -->
        <g transform="translate(520, 50)">
            <!-- Step 2 -->
            <text x="0" y="20" font-size="16">Step 2: Base Prompt Template</text>
            <g transform="translate(20, 40)">
                <text x="0" y="0" font-size="11" font-family="monospace">You are Nat, the CEO Agent of</text>
                <text x="0" y="15" font-size="11" font-family="monospace">Agile Ceremonies.</text>
                <text x="0" y="30" font-size="11" font-family="monospace">Your role is to oversee all</text>
                <text x="0" y="45" font-size="11" font-family="monospace">operations and coordinate agents.</text>
                <text x="0" y="60" font-size="11" font-family="monospace">Approach: Professional,</text>
                <text x="0" y="75" font-size="11" font-family="monospace">strategic, solution-focused.</text>
            </g>

            <!-- Step 3 -->
            <text x="0" y="140" font-size="16">Step 3: Initial Test Command</text>
            <g transform="translate(20, 160)">
                <text x="0" y="0" font-size="11" font-family="monospace">const nat = new NatAgent();</text>
                <text x="0" y="15" font-size="11" font-family="monospace">await nat.processCommand(</text>
                <text x="0" y="30" font-size="11" font-family="monospace">    "Initialize system status check"</text>
                <text x="0" y="45" font-size="11" font-family="monospace">);</text>
            </g>
        </g>
    </g>
</svg>